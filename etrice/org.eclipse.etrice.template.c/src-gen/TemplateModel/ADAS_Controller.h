/**
 * @author generated by eTrice
 *
 * Header File of ActorClass ADAS_Controller
 *
 */

#ifndef _TEMPLATEMODEL_ADAS_CONTROLLER_H_
#define _TEMPLATEMODEL_ADAS_CONTROLLER_H_

#include "etDatatypes.h"
#include "messaging/etMessage.h"

/* include all referenced room classes */
#include "TemplateModel/PSendData.h"


typedef struct ADAS_Controller ADAS_Controller;

/* const part of ActorClass (ROM) */
typedef struct ADAS_Controller_const {
	const char* instName;

	/* simple ports */
	const PSendDataPort dataPortB;
	const PSendDataConjPort relayPortA;
	const PSendDataConjPort relayPortB;
	const PSendDataConjPort relayPortC;

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
} ADAS_Controller_const;


/* constant for state machine data */
#define ADAS_CONTROLLER_HISTORY_SIZE 2

/* variable part of ActorClass (RAM) */
struct ADAS_Controller {
	const ADAS_Controller_const* const constData;

	/* data send ports */

	/*--------------------- attributes ---------------------*/
	 char str[40]
	;
	 char retain_str[40]
	;
	 char send_str[40]
	;
	 charPtr temp_string;
	 float32 velocity;
	 float32 distance;
	 int32 colliderNum;
	 float32 steering;
	 float32 trafficLight;


	/* state machine variables */
	etInt16 state;
	etInt16 history[ADAS_CONTROLLER_HISTORY_SIZE];
};

void ADAS_Controller_init(ADAS_Controller* self);

void ADAS_Controller_receiveMessage(void* self, const void* ifitem, const etMessage* msg);


/*--------------------- user constructor/destructor ---------------------*/

/*--------------------- operations ---------------------*/
 void ADAS_Controller_ALK(ADAS_Controller* self);
 void ADAS_Controller_ACC(ADAS_Controller* self);
 int32 ADAS_Controller_ChoicePoint0(ADAS_Controller* self, float32 dist, float32 velo, float32 tl, int32 cnum);
 void ADAS_Controller_AEB(ADAS_Controller* self);


#endif /* _TEMPLATEMODEL_ADAS_CONTROLLER_H_ */

