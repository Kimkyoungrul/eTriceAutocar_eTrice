/**
 * @author generated by eTrice
 *
 * Instance File of Node node with SubSystem subSystemRef
 * - instantiation of all actor instances and port instances
 * - configuration of data and connection of ports
 */

#include "messaging/etMessageService.h"

/* include all referenced room classes */
#include "TemplateModel/ACC.h"
#include "TemplateModel/ADAS_Controller.h"
#include "TemplateModel/AEB.h"
#include "TemplateModel/ALK.h"
#include "room/basic/service/tcp/ATcpClient.h"
#include "room/basic/service/timing/ATimingService.h"
#include "TemplateModel/Gateway.h"
#include "TemplateModel/TopActor.h"

/* instantiation of message services and message buffers */
/* DefaultPhysicalThread */
#define DEFAULTPHYSICALTHREAD_POOL_SIZE		100
#define DEFAULTPHYSICALTHREAD_BLOCK_SIZE	64
static uint8 msgBuffer_DefaultPhysicalThread[DEFAULTPHYSICALTHREAD_POOL_SIZE * DEFAULTPHYSICALTHREAD_BLOCK_SIZE];
static etMessageService msgService_DefaultPhysicalThread;
/* GateThread */
#define GATETHREAD_POOL_SIZE		100
#define GATETHREAD_BLOCK_SIZE	64
static uint8 msgBuffer_GateThread[GATETHREAD_POOL_SIZE * GATETHREAD_BLOCK_SIZE];
static etMessageService msgService_GateThread;
/* ControlThread */
#define CONTROLTHREAD_POOL_SIZE		100
#define CONTROLTHREAD_BLOCK_SIZE	64
static uint8 msgBuffer_ControlThread[CONTROLTHREAD_POOL_SIZE * CONTROLTHREAD_BLOCK_SIZE];
static etMessageService msgService_ControlThread;
/* PAEBThread */
#define PAEBTHREAD_POOL_SIZE		100
#define PAEBTHREAD_BLOCK_SIZE	64
static uint8 msgBuffer_PAEBThread[PAEBTHREAD_POOL_SIZE * PAEBTHREAD_BLOCK_SIZE];
static etMessageService msgService_PAEBThread;
/* PACCThread */
#define PACCTHREAD_POOL_SIZE		100
#define PACCTHREAD_BLOCK_SIZE	64
static uint8 msgBuffer_PACCThread[PACCTHREAD_POOL_SIZE * PACCTHREAD_BLOCK_SIZE];
static etMessageService msgService_PACCThread;
/* PALKThread */
#define PALKTHREAD_POOL_SIZE		100
#define PALKTHREAD_BLOCK_SIZE	64
static uint8 msgBuffer_PALKThread[PALKTHREAD_POOL_SIZE * PALKTHREAD_BLOCK_SIZE];
static etMessageService msgService_PALKThread;

/* declarations of all ActorClass instances (const and variable structs) */

/* forward declaration of variable actor structs */
static TopActor _LogSys_subSystemRef_topActor;
static ATcpClient _LogSys_subSystemRef_topActor_TCPClient;
static Gateway _LogSys_subSystemRef_topActor_gateway;
static ADAS_Controller _LogSys_subSystemRef_topActor_controller;
static AEB _LogSys_subSystemRef_topActor_AutoEmergencyBraking;
static ACC _LogSys_subSystemRef_topActor_AdaptiveCruiseControl;
static ALK _LogSys_subSystemRef_topActor_AutoLaneKeeping;
static ATimingService _LogSys_subSystemRef_timingService;

/* forward declaration of variable port structs */
/* nothing to do */


/* instance _LogSys_subSystemRef_topActor */
static /*const*/ TopActor_const _LogSys_subSystemRef_topActor_const = {
	"/LogSys/subSystemRef/topActor"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
static TopActor _LogSys_subSystemRef_topActor = {
	&_LogSys_subSystemRef_topActor_const,

	/* data send ports */

	/* attributes */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_TCPClient */
static /*const*/ ATcpClient_const _LogSys_subSystemRef_topActor_TCPClient_const = {
	"/LogSys/subSystemRef/topActor/TCPClient"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_GateThread, 6+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/TCPClient","/LogSys/subSystemRef/topActor/gateway"
	#endif
	} /* Port controlPort */
	,{NULL, &msgService_GateThread, 7+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/TCPClient","/LogSys/subSystemRef/topActor/gateway"
	#endif
	} /* Port payloadPort */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
static ATcpClient _LogSys_subSystemRef_topActor_TCPClient = {
	&_LogSys_subSystemRef_topActor_TCPClient_const,

	/* data send ports */

	/* attributes */
	0		/* lastError */,
	{
		0		/* connectionId */,
		0		/* length */,
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}		/* data[32] */
	}		/* payloadRecvBuffer */,
	NULL		/* client */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_gateway */
static /*const*/ Gateway_const _LogSys_subSystemRef_topActor_gateway_const = {
	"/LogSys/subSystemRef/topActor/gateway"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_DefaultPhysicalThread, 3+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/gateway","/LogSys/subSystemRef/topActor/TCPClient"
	#endif
	} /* Port ctrl */
	,{NULL, &msgService_DefaultPhysicalThread, 4+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/gateway","/LogSys/subSystemRef/topActor/TCPClient"
	#endif
	} /* Port payload */
	,{NULL, &msgService_ControlThread, 10+BASE_ADDRESS, 3
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/gateway","/LogSys/subSystemRef/topActor/controller"
	#endif
	} /* Port dataPortA */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
static Gateway _LogSys_subSystemRef_topActor_gateway = {
	&_LogSys_subSystemRef_topActor_gateway_const,

	/* data send ports */

	/* attributes */
	{'0'}		/* str1[40] */,
	{'0'}		/* str2[40] */,
	'0'		/* situation_code */,
	{'0'}		/* temp_string[40] */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_controller */
static /*const*/ ADAS_Controller_const _LogSys_subSystemRef_topActor_controller_const = {
	"/LogSys/subSystemRef/topActor/controller"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_GateThread, 8+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/controller","/LogSys/subSystemRef/topActor/gateway"
	#endif
	} /* Port dataPortB */
	,{NULL, &msgService_PACCThread, 17+BASE_ADDRESS, 2
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/controller","/LogSys/subSystemRef/topActor/AdaptiveCruiseControl"
	#endif
	} /* Port relayPortA */
	,{NULL, &msgService_PALKThread, 19+BASE_ADDRESS, 3
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/controller","/LogSys/subSystemRef/topActor/AutoLaneKeeping"
	#endif
	} /* Port relayPortB */
	,{NULL, &msgService_PAEBThread, 15+BASE_ADDRESS, 4
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/controller","/LogSys/subSystemRef/topActor/AutoEmergencyBraking"
	#endif
	} /* Port relayPortC */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
static ADAS_Controller _LogSys_subSystemRef_topActor_controller = {
	&_LogSys_subSystemRef_topActor_controller_const,

	/* data send ports */

	/* attributes */
	{'0'}		/* str[40] */,
	{'0'}		/* retain_str[40] */,
	{'0'}		/* send_str[40] */,
	"0"		/* temp_string */,
	0		/* velocity */,
	0		/* distance */,
	0		/* colliderNum */,
	0		/* steering */,
	0		/* trafficLight */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_AutoEmergencyBraking */
static /*const*/ AEB_const _LogSys_subSystemRef_topActor_AutoEmergencyBraking_const = {
	"/LogSys/subSystemRef/topActor/AutoEmergencyBraking"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_ControlThread, 13+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/AutoEmergencyBraking","/LogSys/subSystemRef/topActor/controller"
	#endif
	} /* Port recvPort */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
static AEB _LogSys_subSystemRef_topActor_AutoEmergencyBraking = {
	&_LogSys_subSystemRef_topActor_AutoEmergencyBraking_const,

	/* data send ports */

	/* attributes */
	{'0'}		/* str[40] */,
	{'0'}		/* send_str[40] */,
	"0"		/* temp_string */,
	0		/* velocity */,
	0		/* distance */,
	0		/* colliderNum */,
	{'0'}		/* colliderNum_str[40] */,
	0		/* steering */,
	0		/* trafficLight */,
	{'0'}		/* situation_code[40] */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_AdaptiveCruiseControl */
static /*const*/ ACC_const _LogSys_subSystemRef_topActor_AdaptiveCruiseControl_const = {
	"/LogSys/subSystemRef/topActor/AdaptiveCruiseControl"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_ControlThread, 11+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/AdaptiveCruiseControl","/LogSys/subSystemRef/topActor/controller"
	#endif
	} /* Port recvPort */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
static ACC _LogSys_subSystemRef_topActor_AdaptiveCruiseControl = {
	&_LogSys_subSystemRef_topActor_AdaptiveCruiseControl_const,

	/* data send ports */

	/* attributes */
	{'0'}		/* str[40] */,
	{'0'}		/* send_str[40] */,
	"0"		/* temp_string */,
	0		/* velocity */,
	0		/* distance */,
	0		/* colliderNum */,
	{'0'}		/* colliderNum_str[40] */,
	0		/* steering */,
	0		/* trafficLight */,
	{'0'}		/* situation_code[40] */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_topActor_AutoLaneKeeping */
static /*const*/ ALK_const _LogSys_subSystemRef_topActor_AutoLaneKeeping_const = {
	"/LogSys/subSystemRef/topActor/AutoLaneKeeping"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */
	,{NULL, &msgService_ControlThread, 12+BASE_ADDRESS, 1
	#ifdef ET_ASYNC_MSC_LOGGER_ACTIVATE
	,"/LogSys/subSystemRef/topActor/AutoLaneKeeping","/LogSys/subSystemRef/topActor/controller"
	#endif
	} /* Port recvPort */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
};
static ALK _LogSys_subSystemRef_topActor_AutoLaneKeeping = {
	&_LogSys_subSystemRef_topActor_AutoLaneKeeping_const,

	/* data send ports */

	/* attributes */
	{'0'}		/* str[40] */,
	{'0'}		/* send_str[40] */,
	"0"		/* temp_string */,
	0		/* velocity */,
	0		/* distance */,
	0		/* colliderNum */,
	{'0'}		/* colliderNum_str[40] */,
	0		/* steering */,
	0		/* trafficLight */,
	{'0'}		/* situation_code[40] */

	/* state and history are initialized in init function */
};

/* instance _LogSys_subSystemRef_timingService */
static /*const*/ ATimingService_const _LogSys_subSystemRef_timingService_const = {
	"/LogSys/subSystemRef/timingService"

	/* Ports: {varData, msgService, peerAddress, localId} */
	/* simple ports */

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
	,{0, NULL+0}
};
static ATimingService _LogSys_subSystemRef_timingService = {
	&_LogSys_subSystemRef_timingService_const,

	/* data send ports */

	/* attributes */
	{ {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL}, {{0,0},{0,0},0,NULL} } 		/* tcbs[30] */,
	NULL		/* usedTcbsRoot */,
	NULL		/* freeTcbsRoot */

	/* state and history are initialized in init function */
};

