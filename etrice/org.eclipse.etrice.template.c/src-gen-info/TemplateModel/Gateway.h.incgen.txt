/**
 * @author generated by eTrice
 *
 * Header File of ActorClass Gateway
 *
 */

#ifndef _TEMPLATEMODEL_GATEWAY_H_
#define _TEMPLATEMODEL_GATEWAY_H_

#include "etDatatypes.h"
#include "messaging/etMessage.h"

/* include all referenced room classes */
#include "TemplateModel/PSendData.h"
#include "room/basic/service/tcp/PTcpControl.h"
#include "room/basic/service/tcp/PTcpPayload.h"


typedef struct Gateway Gateway;

/* const part of ActorClass (ROM) */
typedef struct Gateway_const {
	const char* instName;

	/* simple ports */
	const PTcpControlConjPort ctrl;
	const PTcpPayloadConjPort payload;
	const PSendDataConjPort dataPortA;

	/* data receive ports */

	/* saps */

	/* replicated ports */

	/* services */
} Gateway_const;


/* constant for state machine data */
#define GATEWAY_HISTORY_SIZE 2

/* variable part of ActorClass (RAM) */
struct Gateway {
	const Gateway_const* const constData;

	/* data send ports */

	/*--------------------- attributes ---------------------*/
	 char str1[40]
	;
	 char str2[40]
	;
	 char situation_code;
	 char temp_string[40]
	;


	/* state machine variables */
	etInt16 state;
	etInt16 history[GATEWAY_HISTORY_SIZE];
};

void Gateway_init(Gateway* self);

void Gateway_receiveMessage(void* self, const void* ifitem, const etMessage* msg);


/*--------------------- user constructor/destructor ---------------------*/

/*--------------------- operations ---------------------*/
 void Gateway_sendPayloadString(Gateway* self, char* data);


#endif /* _TEMPLATEMODEL_GATEWAY_H_ */

